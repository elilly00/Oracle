-- EMPLYEE테이블의 사번, 이름, 급여 조회
SELECT EMP_ID, EMP_NAME, SALARY
FROM EMPLOYEE;

-- EMPLOYEE테이블의 모든 정보 조회
SELECT * FROM EMPLOYEE;

-- JOB 테이블의 모든 정보 조회
SELECT * FROM JOB;

-- JOB 테이블의 직급 이름 조회
SELECT JOB_NAME
FROM JOB;

-- DEPARTMENT테이블의 모든 정보 조회
SELECT * FROM DEPARTMENT;

-- EMPLOYEE테이블의 직원 명, 이메일, 전화번호, 고용일 조회
SELECT EMP_NAME, EMAIL, PHONE, HIRE_DATE
FROM EMPLOYEE;

-- EMPLOYEE테이블의 고용일, 사원 이름, 월급 조회
SELECT HIRE_DATE, EMP_NAME, SALARY
FROM EMPLOYEE;

-- 컬럼 값 연산
-- EMPLOYEE테이블에서 직원 명, 연봉(월급*12) 조회
SELECT EMP_NAME, SALARY*12 연봉
FROM EMPLOYEE;

-- EMPLOYEE데이블에서 직원 명, 연봉, 보너스를 추가한 연봉 조회
SELECT EMP_NAME, SALARY*12 연봉, (SALARY+(SALARY*BONUS))*12
FROM EMPLOYEE;

-- EMPLOYEE테이블에서 이름, 연봉, 총수령액(보너스 포함), 실수령액(총수령액-(연봉*세금3%)) 조회
SELECT EMP_NAME, SALARY*12 연봉, (SALARY+(SALARY*BONUS))*12 총수령액, 
      (SALARY+(SALARY*BONUS))*12-((SALARY*12)*0.03) 실수령액
FROM EMPLOYEE;

-- EMPLOYEE테이블에서 이름, 고용일, 근무일수(오늘날짜(SYSDATE)-고용일) 조회
SELECT EMP_NAME, HIRE_DATE 고용일, SYSDATE-HIRE_DATE 근무일수
FROM EMPLOYEE;

-- 리터럴
-- EMPLOYEE테이블에서 직원 번호, 사원 명, 급여, 단위(원) 조회
SELECT EMP_ID, EMP_NAME, SALARY, '원' 단위
FROM EMPLOYEE;

-- DISTINCT : 컬럼에 포함된 중복된 값을 한 번만 표시
-- EMPLOYEE테이블에서 직원의 직급 코드 조회
SELECT JOB_CODE FROM EMPLOYEE;
SELECT DISTINCT JOB_CODE FROM EMPLOYEE;

-- EMPLOYEE테이블에서 부서코드와 직급코드 조회
SELECT DEPT_CODE, JOB_CODE
FROM EMPLOYEE;

SELECT DISTINCT DEPT_CODE, JOB_CODE
FROM EMPLOYEE;

-- EMPLOYEE테이블에서 부서코드가 D9인 직원의 이름, 부서코드 조회
SELECT EMP_NAME, DEPT_CODE
FROM EMPLOYEE
WHERE DEPT_CODE = 'D9';

-- EMPLOYEE테이블에서 급여가 400000 이상인 직원의 이름, 급여 조회
SELECT EMP_NAME, SALARY
FROM EMPLOYEE
WHERE SALARY >= 400000;

-- EMPLOYEE테이블에서 부서코드가 D9가 아닌 사원의 사번, 이름, 부서코드 조회
SELECT EMP_ID, EMP_NAME, DEPT_CODE
FROM EMPLOYEE
WHERE DEPT_CODE != 'D9';

-- EMPLOYEE테이블에서 퇴사 여부가 N인 직원을 조회하고 근무 여부를 재직중으로 표시하여
-- 사번, 이름, 고용일, 근무 여부 조회
SELECT EMP_ID, EMP_NAME, HIRE_DATE, '재직중' "근무 여부"
FROM EMPLOYEE
WHERE ENT_YN = 'N';

-- EMPLOYEE데이블에서 월급이 3000000 이상인 사원의 이름, 월급, 고용일 조회
SELECT EMP_NAME, SALARY, HIRE_DATE
FROM EMPLOYEE
WHERE SALARY >= 3000000;

-- EMPLOYEE테이블에서 SAL_LEVEL이 S1인 사원의 이름, 월급, 고용일, 연락처 조회
SELECT EMP_NAME, SALARY, HIRE_DATE, PHONE
FROM EMPLOYEE
WHERE SAL_LEVEL = 'S1';

-- EMPLOYEE테이블에서 실수령액(총수령액-(연봉*세금3%))이 5천만원 이상인 사원의 이름, 월급, 실수령액, 고용일
SELECT EMP_NAME, SALARY, (SALARY+(SALARY*BONUS))*12 실수령액, HIRE_DATE
FROM EMPLOYEE
WHERE (SALARY+(SALARY*BONUS))*12 >= 50000000;

-- EMPLOYEE테이블에서 부서코드가 D6이고 급여를 3백만보다 많이 받는 직원의 이름, 부서코드, 급여 조회
SELECT EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D6' AND SALARY >= 3000000;

-- EMMPLOYEE테이블에서 부서코드가 D6이거나 급여를 3백만보다 많이 받는 직원의 이름, 부섴코드, 급여 조회
SELECT EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE
WHERE DEPT_CODE = 'D6' OR SALARY >= 3000000;

-- EMPLOYEE테이블에서 급여를 350만 이상 600만 이하를 받는 직원의 사번 이름, 급여, 부서콛, 직급코드 조회
SELECT EMP_NAME, SALARY, DEPT_CODE, JOB_CODE
FROM EMPLOYEE
WHERE SALARY >= 3500000 AND SALARY <= 6000000;

-- EMPLOYEE테이블에 월급이 4000000이상이고 JOB_CODE가 J2인 사원의 전체 내용 조회
SELECT *
FROM EMPLOYEE
WHERE SALARY >= 4000000 AND JOB_CODE = 'J2';

-- EMPLOYEE테이블에 DEPT_CODE가 D9이거나 D5인 사원 중 고용일이 02년 1월 1일보다 빠른 사원의 이름, 부서코드, 고용일 조회
SELECT EMP_NAME, DEPT_CODE, HIRE_DATE
FROM EMPLOYEE
WHERE (DEPT_CODE = 'D9' OR DEPT_CODE = 'D5') AND HIRE_DATE <= '02/01/01';

-- EMPLOYEE테이블에서 급여를 350만 이상 600만 이하를 받는 직원의 사번 이름, 급여, 부서코드, 직급코드 조회
SELECT EMP_NAME, SALARY, DEPT_CODE, JOB_CODE
FROM EMPLOYEE
WHERE SALARY BETWEEN 3500000 AND 6000000;

-- 350만 미만 또는 600만 초과하는 직원의 사번, 이름, 급여, 부서코드, 직급코드 조회
SELECT EMP_ID, EMP_NAME, SALARY, DEPT_CODE, JOB_CODE
FROM EMPLOYEE
WHERE SALARY NOT BETWEEN 3500000 AND 6000000;

-- EMPLOYEE테이블에서 고용일이 90/01/01 ~ 01/01/01인 사원의 전체 내용 조회
SELECT * 
FROM EMPLOYEE
WHERE HIRE_DATE BETWEEN '90/01/01' AND '01/01/01';

-- EMPLOYEE테이블에서 성이 전씨인 사원의 사번, 이름, 고용일 조회
SELECT EMP_ID, EMP_NAME, HIRE_DATE
FROM EMPLOYEE
WHERE EMP_NAME LIKE '전%';

-- EMPLOYEE테이블에서 이름에 '하'가 포함된 직원의 이름, 주민번호, 부서코드 조회
SELECT EMP_NAME, EMP_NO, DEPT_CODE
FROM EMPLOYEE
WHERE EMP_NAME LIKE '%하%';

-- EMPOYEE테이블에서 전화번호 4번째 자리가 9로 시작하는 사원의 사번, 이름, 전화번호 조회
SELECT EMP_ID, EMP_NAME, PHONE
FROM EMPLOYEE
WHERE PHONE LIKE '____9%';

-- EMPLOYEE테이블에서 김씨 성이 아닌 사원의 사번, 이름, 고용일 조회
SELECT EMP_ID, EMP_NAME, HIRE_DATE
FROM EMPLOYEE
WHERE EMP_NAME NOT LIKE '김%';

-- EMPLOYEE테이블에서 이메일 중 _의 앞 글자가 3자리인 이메일 주소를 가진 사원의 사번, 이름, 이메일 주소 조회
SELECT EMP_ID, EMP_NAME, EMAIL
FROM EMPLOYEE
WHERE EMAIL LIKE '___^_%' ESCAPE '^';

-- EMPLOYEE테이블에서 이름 끝이 '연'으로 끝나는 사원 이름 조회
SELECT EMP_NAME
FROM EMPLOYEE
WHERE EMP_NAME LIKE '%연';

-- EMPLOYEE테이블에서 전화번호 처음 3자리가 010이 아닌 사원의 이름, 전화번호 조회
SELECT EMP_NAME, PHONE
FROM EMPLOYEE
WHERE PHONE NOT LIKE '010%';

-- EMPLOYEE테이블에서 메일주소 _앞이 4글자이면서 DEPT_CODE가 D9 또는 D6이고 고용일이 90/01/01~00/12/01이고, 급여가 270만 이상인 사원 전체 조회
SELECT *
FROM EMPLOYEE
WHERE EMAIL LIKE '____!_%' ESCAPE '!'
      AND (DEPT_CODE = 'D9' OR DEPT_CODE = 'D6') 
      AND HIRE_DATE BETWEEN '90/01/01' AND '00/12/01'
      AND SALARY >= 2700000;
      
-- IS NULL/IS NOT NULL : 컬럼값에 NULL이 들어가는지 / 안 들어가는지 판별
-- EMPLOYEE테이블에서 보너스를 받지 않는 사원의 사번, 이름, 급여, 보너스 조회
SELECT EMP_ID, EMP_NAME, SALARY, BONUS
FROM EMPLOYEE
WHERE BONUS IS NULL;

-- EMPLOYEE테이블에서 보너스를 받는 사원의 사번, 이름, 급여, 보너스 조회
SELECT EMP_ID, EMP_NAME, SALARY, BONUS
FROM EMPLOYEE
WHERE BONUS IS NOT NULL;

-- EMPLOYEE테이블에서 관리자도 없고 부서 배치도 받지 않은 직원의 이름, 관리자, 부서코드 조회
SELECT EMP_NAME, MANAGER_ID, DEPT_CODE
FROM EMPLOYEE
WHERE MANAGER_ID IS NULL AND DEPT_CODE IS NULL;

-- EMPLOYEE테이블에서 부서 배치를 받지 않았지만 보너스를 지급받은 직원의 이름, 보너스, 부서코드 조회
SELECT EMP_NAME, BONUS, DEPT_CODE
FROM EMPLOYEE
WHERE DEPT_CODE IS NULL AND BONUS IS NOT NULL;

-- IN : 목록에 일치하는 값이 있으면 TRUE 반환 (OR 대신 사용)
-- D6 부서와 D9부서원들의 이름, 부서코드, 급여 조회
SELECT EMP_NAME, DEPT_CODE, SALARY
FROM EMPLOYEE 
WHERE DEPT_CODE IN ('D6', 'D9');

-- 직급코드가 J1, J2, J3, J4인 사람들의 이름, 직급코드, 급여 조회
SELECT EMP_NAME, JOB_CODE, SALARY
FROM EMPLOYEE
WHERE JOB_CODE IN ('J1', 'J2', 'J3', 'J4');

-- EMPLOYEE테이블에서 사번, 이름, 급여를 연결하여 조회
SELECT EMP_ID || EMP_NAME || SALARY
FROM EMPLOYEE;

-- OREDER BY : 정렬할 때 작성하는 구문
-- SELECT문에서 가장 마지막에 작성되며 실행순서도 가장 마지막
-- NULL FIRST / NULL LAST : 컬럼명/별칭/컬럼순번 정렬 방식
-- ASC : 오름차순 (생략가능)
-- DESC : 내림차순 (무조건 명시)

SELECT EMP_ID 사번, EMP_NAME 이름, SALARY 급여, BONUS 보너스
FROM EMPLOYEE
ORDER BY SALARY NULLS FIRST;















